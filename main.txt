int getThreadIds(int s) {
	std::cout << "The thread id's are : "<<std::this_thread::get_id() << std::endl;
	std::cout << "the string in child threads is : " << s <<std::endl;
	
	return 1;
}

int main() {
	std::cout << "The harware concurency is " << std::thread::hardware_concurrency() <<std::endl;
	std::string s = "Hi how are you";
	threadPool tp(10);

	for (int i = 0; i < 10; i++) {
		std::cout << "The parent thread Id is "<<std::this_thread::get_id() << std::endl;
		std::function<int(int)> job = std::bind(getThreadIds,i);
		
		tp.addJob(job);
		

	}
	sf::RenderWindow window(sf::VideoMode(800, 600),
		"Hello SFML", sf::Style::Default);

	sf::Font font;
	font.loadFromFile("C:/Windows/Fonts/Arial.ttf");

	sf::Text text;
	text.setFont(font);
	text.setPosition(200, 200);
	text.setString("Hello SFML");

	while (window.isOpen())
	{
		sf::Event event;
		while (window.pollEvent(event))
		{
			if (event.type == sf::Event::Closed)
				window.close();
		}
		window.clear();
		window.draw(text);
		window.display();
	}

	return 0;

	std::cout << "the string in parent is " << s << std::endl;
	tp.destroy();
	return 0;